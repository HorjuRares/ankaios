apiVersion: v0.1
workloads:
  hello-k8s:
    runtime: podman-kube
    agent: agent_A
    restartPolicy: NEVER
    controlInterfaceAccess:
      targetPath: "nginx-pod/nginx-container"
      allowRules:
      - type: StateRule
        operation: Read
        filterMask:
        - desiredState
    tags:
      - key: owner
        value: Ankaios team
    runtimeConfig: |
      manifest: |
        apiVersion: v1
        kind: Pod
        metadata:
          name: hello-pod
        spec:
          restartPolicy: Never
          containers:
          - name: looper
            image: alpine:latest
            command:
            - sleep
            - "50000"
          - name: greater
            image: alpine:latest
            command:
            - echo
            - "Hello from a container in a pod"
        ---
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: nginx-config
        data:
          nginx.conf: |
            user nginx;
            worker_processes auto;
            error_log /var/log/nginx/error.log notice;
            pid /var/run/nginx.pid;

            events {
                worker_connections 1024;
            }

            http {
                include       /etc/nginx/mime.types;
                default_type  application/octet-stream;

                log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                                  '$status $body_bytes_sent "$http_referer" '
                                  '"$http_user_agent" "$http_x_forwarded_for"';

                access_log  /var/log/nginx/access.log  main;

                sendfile        on;
                tcp_nopush      on;
                keepalive_timeout  65;
                gzip  on;

                server {
                    listen       80;
                    listen  [::]:80;
                    server_name  localhost;

                    location / {
                        root   /usr/share/nginx/html;
                        index  index.html index.htm;
                    }

                    error_page   500 502 503 504  /50x.html;
                    location = /50x.html {
                        root   /usr/share/nginx/html;
                    }
                }
            }
        ---
        apiVersion: v1
        kind: Pod
        metadata:
          name: nginx-pod
        spec:
          restartPolicy: Never
          containers:
          - name: nginx-container
            image: ghcr.io/nginx:latest
            ports:
            - containerPort: 80
              hostPort: 8080
            volumeMounts:
            - name: nginx-config-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
          volumes:
          - name: nginx-config-volume
            configMap:
              name: nginx-config
